class UaS_BleedingWound : HDBleedingWound {
	string Description;
	vector3 Offset;

	override void Tick() {
		BleedWound();
		if (checkdestroy()) { destroy(); return; }
		if (checkskip()) { return; }
		super.Tick();
	}

	void BleedWound() {
		if (depth <= 0 || random[ubw](0,10) > width) { return; }
		vector3 off = (
			Offset.x + (frandom[ubw](-width,width) * 0.25),
			Offset.y + (frandom[ubw](-width,width) * 0.25),
			Offset.z + (frandom[ubw](-width,width) * 0.25));
		off.z *= bleeder.player.crouchfactor;
		bleeder.A_SpawnParticle(
			"DarkRed",
			//flags: SPF_RELATIVE,
			lifetime: random[ubw](10,35),
			size: frandom[ubw](1,3),
			xoff: off.x,
			yoff: off.y,
			zoff: off.z,
			accelz: -bleeder.gravity,
			fadestepf: 0);
		if (random[ubw](0,5)!=0) { return; }
		bleeder.A_SpawnParticle(
			"DarkRed",
			lifetime: random[ubw](10,35),
			size: frandom[ubw](2,6),
			xoff: off.x + frandom[ubw](-3,3),
			yoff: off.y + frandom[ubw](-3,3),
			zoff: bleeder.getzat(off.x, off.y) + 0.1,
			fadestepf: 0);
	}

	// static string WoundDescription(int newsize) {
		// int sevmax = WoundInfo.severity.size()-1;
		// int typmax = WoundInfo.type.size()-1;
		// int parmax = WoundInfo.bodypart.size()-1;
		// return string.format(
			// "%s %s, %s",
			// WoundInfo.severity[random[uas_wi](0, sevmax)],
			// WoundInfo.type[random[uas_wi](0, typmax)],
			// WoundInfo.bodypart[random[uas_wi](0, parmax)]
		// );
	// }

	static UaS_BleedingWound Create(HDBleedingWound bw) {
		UaS_BleedingWound uw = new("UaS_BleedingWound");
		// Copy stuff from original wound
		uw.bleeder = bw.bleeder;
		uw.source = bw.source;
		uw.depth = bw.depth;
		uw.width = bw.width;
		uw.patched = bw.patched;
		uw.sealed = bw.sealed;
		uw.regenrate = bw.regenrate;
		uw.damagetype = bw.damagetype;
		// Add expanded details
		uw.Offset = (
			frandom[ubw](-uw.bleeder.radius, uw.bleeder.radius),
			frandom[ubw](-uw.bleeder.radius, uw.bleeder.radius),
			frandom[ubw](
				uw.bleeder.height * 0.25,
				uw.bleeder.height * 0.9));
		return uw;
	}

	static const string[] severity = {
		"minor","small","shallow",
		"superficial","moderate","medium",
		"large","deep","serious","critical" };
	static const string[] type = {
		"incision","laceration","puncture",
		"avulsion","penetration" };
	static const string[] bodypart = {
		"chest","abdomen","pelvis",
		"upper back","lower back",
		"left shoulder","right shoulder",
		"left upper arm","right upper arm",
		"left forearm","right forearm",
		"left hip","right hip",
		"left thigh","right thigh",
		"left calf","right calf",
		"left shin","right shin"
	};
}
