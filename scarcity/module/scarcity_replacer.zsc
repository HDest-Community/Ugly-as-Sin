extend class UaS_Scarcity_Handler {
	bool DoOther(actor mo) {
		bool dbgActuallyHandled = false;
		
		bool boxClass = (
			mo is 'HD9mBoxPickup'
			|| mo is 'HD7mBoxPickup'
			|| mo is 'ShellBoxPickup'
			|| mo is 'HD355BoxPickup'
		);
		bool shellClass = (
			mo is 'ShellPickup'
			|| mo is 'HDShellAmmo'
		);

		//Replacer routines for mag-type items
		if (mo is 'HDMagAmmo') {
			dbgActuallyHandled = true;
			HDMagAmmo m = HDMagAmmo(mo);
			name magname = m.GetClassName();
			name roundtype = "";
			int mpu = m.maxperunit;
			if (m is "HD7mMag") { mpu = 30; }
			if (m is "HD7mClip") { mpu = 10; }
			if (m.roundtype != "None") { roundtype =  m.roundtype.GetClassName(); }
			MagReplacer(magname, roundtype, mpu, mo);
			mo.Destroy();
		}
	
		// Replacer routines for HDUPK-derived and ammo items
		else if (boxClass) {
			dbgActuallyHandled = true;
			HDUPK b = HDUPK(mo);
			BoxReplacer(b.GetClassName(), b.pickuptype.GetClassName(), b.amount, mo);
			mo.Destroy();
		}
		else if (shellClass) {
			dbgActuallyHandled = true;
			UaS.SpawnStuff('HDFumblingShell', random(0, int(4 * UaS_ScarcityOverspawn)), mo.pos, true);
			mo.Destroy();
		}
		else if (mo is 'RocketBigPickup') {
			dbgActuallyHandled = true;
			for(int i = 1; i <= 5; i++) {
				if(UaS.RandomChance(UaS_ScarcityOverspawn)) {
					if(UaS.RandomChance(0.5)) { UaS.SpawnStuff('HDRocketAmmo', random(0, 1), mo.pos); }
					else { UaS.SpawnStuff('DudRocket', random(0, 1), mo.pos); }
				}
			}
			UaS.SpawnStuff('UaS_EmptyRocketBox', 1, mo.pos);
			mo.Destroy();
		}
		else if (mo is 'FragP' || mo is 'HDFragGrenadeAmmo') {
			dbgActuallyHandled = true;
			if(UaS.RandomChance(UaS_ScarcityOverspawn)) { UaS.SpawnStuff('FragP', random(0, 1), mo.pos); }
			else { UaS.SpawnStuff('HDFragSpoon', random(0, 1), mo.pos); }
			mo.Destroy();
		}

		//Replacer routines for equipment
		else if (mo is 'HDMap') {
			dbgActuallyHandled = true;
			let spawnedMap = UaS_Automap(actor.Spawn('UaS_Automap', mo.pos));
			if(spawnedMap) { spawnedMap.status = random(0, 2); }
			mo.Destroy();
		}
		else if (mo is 'PortableLiteAmp') {
			dbgActuallyHandled = true;
			let spawnedLiteAmp = PortableLiteAmp(actor.Spawn('PortableLiteAmp', mo.pos));
			double avgint = random(200, 800);
			avgint += random(200, 800);
			avgint += random(200, 800);
			avgint /= 3;
			avgint *= UaS_ScarcityOverspawn;
			avgint  = clamp(avgint,0,400);
			PortableLiteAmp(spawnedLiteAmp).setintegrity(int(avgint));
			UaS.LogDebug(DBG_Scarcity, string.format("Liteamp integrity %i", PortableLiteAmp(spawnedLiteAmp).getintegrity()));
			mo.Destroy();
		}

		if (dbgActuallyHandled) { dbgMsg = dbgMsg.."\n\t• otherwise modified or removed "..mo.getclassname(); }
		else { dbgMsg = dbgMsg.."\n\t• ignored unhandled class "..mo.getclassname(); }
		
		return true;
	}
}
