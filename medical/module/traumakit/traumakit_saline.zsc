extend class UaS_TraumaKit {
	void HandleSaline() {
		statusMessage = statusmessage.."\cjSaline\n";
		statusMessage = statusmessage.."\cuNeutral wound debriding solution.\n";
		statusMessage = statusmessage.."Saline remaining: \cy"..weaponstatus[TKS_SALINE].."\n\n";
		if (!wh.currentWound) { return; }
		if (wh.currentWound.open <= 0) { return; }
		if (weaponstatus[TKS_SALINE] <=0) {
			currentmessage.text = "No saline left!\n";
			currentmessage.timeout = 2*35;
			return;
		}

		// Status precheck
		if (wh.currentWound.dirty < 0) {
			currentmessage.text = "The wound does not need debriding.\n";
			currentmessage.timeout = 10;
			return;
		}

		// Handle actions
		if (weaponstatus[TK_HOLD] < 0) {
			weaponstatus[TK_HOLD] = min(weaponstatus[TK_HOLD] + 1, 0);
			return;
		}

		if ((owner.player.cmd.buttons & BT_ATTACK)) {
			if (!HandleStrip()) { return; }
			if (!(owner.player.oldbuttons & BT_ATTACK)) {
				weaponstatus[TK_HOLD] = random[uas_tk](20,35);
				owner.A_StartSound("misc/smallslop", CHAN_WEAPON);
			}
			else {
				weaponstatus[TK_HOLD]--;
			}

			if (weaponstatus[TK_HOLD] > 0) {
				currentmessage.text = "Flushing the wound...\n";
				currentmessage.timeout = 10;

				weaponstatus[TKS_SALINE]--;

				// semi-normalized distribution for success check
				int check = (
					random[uas_tk](0,75) +
					random[uas_tk](0,100)) / 2;

				if (wh.currentWound.inpain(5)) {
					weaponstatus[TK_HOLD] = -5;
					wh.currentWound.inpain(35);
					PainJolt();
				}

				// remove some dirt
				if (check < wh.currentWound.dirty) {
					owner.A_StartSound("misc/smallslop", CHAN_WEAPON);
					wh.currentWound.dirty = max(wh.currentWound.dirty - random[uas_tk](1,2), 0);
					if(random[uas_tk](0, 35) == 0) {
						patient.A_StartSound(patient.gruntsound, CHAN_VOICE);
					}
				}

				// maybe remove some infection
				if (check < wh.currentWound.infection && random[uas_tk](0,1) == 0) {
					wh.currentWound.infection = max(wh.currentWound.infection - 1, 1);
				}

				HDPlayerPawn(owner).A_MuzzleClimb(
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1)),
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1)),
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1)),
					(frandom[uas_tk](-.1,.1),frandom[uas_tk](.01,.1))
				);
			}
		}
	}
}
