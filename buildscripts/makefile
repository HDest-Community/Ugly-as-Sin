SHELL := bash
.SILENT:

define PreprocessFiles =
	sed "s|^// if bundled: ||; /^\/\* if bundled/d"
endef

all: zscript cvarinfo menudef mapinfo textures wtblklst manual

# =========================
# ZSCRIPT
# =========================
zscript:
	echo "Autogenerating zscript..."
	echo "// Autogenerated " > ../zscript.zsc
	echo >> ../zscript.zsc
	echo "version \"4.5\"" >> ../zscript.zsc
	echo >> ../zscript.zsc
	for f in $$(find ../* -name "core*.zsc" -not -path "*zscript.zsc" | sort -t '/' -k2,2 -k4r ) ; do \
		ifile=$$(basename $$f) ; \
		ipath=$$(dirname $${f:3}) ; \
		echo "#include \"$$ipath/$$ifile\"" >> ../zscript.zsc ; \
	done
	for f in $$(find ../* -name "*.zsc" -not -path "*zscript.zsc" -not -path "*core*" | sort -t '/' -k2,2 -k4r ) ; do \
		ifile=$$(basename $$f) ; \
		ipath=$$(dirname $${f:3}) ; \
		echo "#include \"$$ipath/$$ifile\"" >> ../zscript.zsc ; \
	done

# =========================
# CVARINFO
# =========================
cvarinfo:
	echo "Autogenerating cvarinfo..."
	printf "// Autogenerated\n" > ../cvarinfo.txt
	for f in $$(find ../* -name "cvarinfo.txt" -not -path "../cvarinfo.txt") ; do \
		$(PreprocessFiles) $$f >> ../cvarinfo.txt ; \
	done
	sort ../cvarinfo.txt -t '_' -k 2,2 -o ../cvarinfo.txt

# =========================
# MENUDEF
# =========================
menudef:
	echo "Autogenerating menudef..."
	echo "// Autogenerated " > ../menudef.txt
	echo >> ../menudef.txt
	cat ../core/menudef.txt >> ../menudef.txt
	for f in $$(find ../* -name "menudef*" -not -path "../core/*" -not -path "../menudef.txt" -not -path "../core/menudef.txt") ; do \
		$(PreprocessFiles) $$f >> ../menudef.txt ; \
	done

# =========================
# MAPINFO
# =========================
mapinfo:
	echo "Autogenerating mapinfo..."
	rm ../mapinfo.txt
	find ../* \
		-name "mapinfo.txt*" \
		-not -path "../mapinfotemp.txt" \
		-not -path "../mapinfo.txt" \
		-exec cat {} + >> ../mapinfotemp.txt
	sort -r ../mapinfotemp.txt | uniq >> ../mapinfo.txt
	# Need to do this after to get proper sorting
	echo "// Autogenerated " > ../mapinfotemp.txt
	echo >> ../mapinfotemp.txt
	cat ../mapinfo.txt >> ../mapinfotemp.txt
	cat ../mapinfotemp.txt > ../mapinfo.txt
	rm ../mapinfotemp.txt

# =========================
# TEXTURES
# =========================
textures:
	echo "Autogenerating textures..."
	echo "// Autogenerated " > ../textures.txt
	echo >> ../textures.txt
	for file in $$(find ../* -name "textures.txt" -not -path "../textures.txt") ; do \
		while IFS='/' read -r line ; do \
			d=$$(dirname $$file) ; \
			d="$${d:3}/patches" ; \
			echo "$${line/patches/$$d}" >> ../textures.txt ; \
		done < $$file ; \
	done

# =========================
# Visual Weapons module textures
# =========================
visweps:
	echo "Autogenerating viswep textures..."
	echo "// Autogenerated " > ../textures.marines.txt
	echo >> ../textures.marines.txt
	for f in $$(find ../visualweapons/sprites/* -type f) ; do \
		#echo "$$f" ; \
		cfile=$$(basename $$f) ; \
		cpath=$$(dirname $$f) ; \
		sizex=$$(od --endian=little --read-bytes 2 --skip-bytes 0 -t d2 -An $$f | tr -d ' ') ; \
		sizey=$$(od --endian=little --read-bytes 2 --skip-bytes 2 -t d2 -An $$f | tr -d ' ') ; \
		offx=$$(od --endian=little --read-bytes 2 --skip-bytes 4 -t d2 -An $$f  | tr -d ' ') ; \
		offy=$$(od --endian=little --read-bytes 2 --skip-bytes 6 -t d2 -An $$f  | tr -d ' ') ; \
		echo "sprite $$cfile, $$sizex, $$sizey {" >> ../textures.marines.txt ; \
		echo " 	patch \"$${f:3}\", 0, 0" >> ../textures.marines.txt ; \
		echo "	offset $$offx, $$offy }" >> ../textures.marines.txt ; \
		echo >> ../textures.marines.txt ; \
	done

# =========================
# WTBLKLST
# =========================
wtblklst:
	echo "Autogenerating wtblklst..."
	echo "// Autogenerated " > ../wtblklst.txt
	echo >> ../wtblklst.txt
	find \
		../* \
		-name "wtblklst.txt" \
		-not -path "../wtblklst.txt" \
		-exec cat {} + >> ../wtblklst.txt

# =========================
# Manual contents
# =========================
manual:
	echo "Autogenerating manual contents page..."
	echo "# Manual Contents " > ../manual/contents.md
	echo >> ../manual/contents.md
	for r in $$(find ../* -name "readme.md" -not -path "../readme.md") ; do \
		t=$$(head -1 $$r) ; \
		t="$${t:2}" ; \
		echo "* [$$t]($$r)" >> ../manual/contents.md ; \
	done
