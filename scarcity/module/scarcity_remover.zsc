extend class UaS_Scarcity_Handler {
	string dbgMsg;
	//Remover function which counts all of an item then only removes a set percentage
	void ExactScarcity(name checkClass, double targetPercent) {

		// Build instance array for this class
		array<Actor> thingArray;
		Actor nextThing;
		let thingCounter = ThinkerIterator.Create(CheckClass);
		while(nextThing = Actor(thingCounter.Next(true))) {
			if (nextThing is 'Inventory' && Inventory(nextThing).owner) { continue; }
			thingArray.Push(nextThing);
		}

		// Calculate how many to keep
		int originalcount = thingArray.Size();
		if(originalcount <= 0) { return; } // sanity?
		int targetAmount = int(thingArray.Size() * targetPercent);

		// Loop over each instance until we hit the target amount
		dbgMsg = "Scarcity processing for "..CheckClass.." x"..originalcount;
		while(thingArray.Size() > targetAmount) {
			// pick a random object from array
			int index = random(0, thingArray.Size()-1);
			Actor mo = Actor(thingArray[index]);
			bool skipConditions = (
				!mo
				|| (mo is 'Inventory' && Inventory(mo).owner)
			);
			if(skipConditions) {
				dbgMsg = dbgMsg.."\n\tâ€¢ does not exist";
				thingArray.Delete(index);
				continue;
			}

			// Check mob loot integration
			if (MobLoot(mo)) {}
			else if (DoWeapons(HDWeapon(mo))) {}
			else if (DoMedical(mo)) {}
			else if (DoOther(mo)) {}
			thingArray.Delete(index);
		}

		//UaS.LogDebug(DBG_Scarcity, string.format(checkClass.." %i, %i, %i", originalcount, ThingArray.Size(), targetAmount));
		UaS.LogDebug(DBG_Scarcity, string.format(dbgMsg));
		thingArray.Clear();
	}
}
