extend class UaS_TraumaKit {
	void HandlePainkiller() {
		statusMessage = statusmessage..String.Format(Stringtable.Localize("$UI_TRK_PAINKILLER_INFO"), weaponstatus[TKS_PAINKILLER]);
		if (!mti.currentWound) { return; }
		if (mti.currentWound.open <= 0) { return; }
		if (weaponstatus[TKS_PAINKILLER] <=0) {
			currentmessage.text = Stringtable.Localize("$UI_TRK_PAINKILLER_NONELEFT");
			currentmessage.timeout = 2*35;
			return;
		}

		// Handle actions
		if((owner.player.cmd.buttons & BT_ATTACK) && !(owner.player.oldbuttons & BT_ATTACK)) {
			if (!HandleStrip()) { return; }
			owner.A_StartSound("misc/bulletflesh",CHAN_WEAPON);
			weaponstatus[TKS_PAINKILLER]--;
			//PlaySkinSound(SKINSOUND_GRUNT,"*grunt");
			int inject = (
				random[uas_tk](25,75) +
				random[uas_tk](25,75) +
				random[uas_tk](25,75)) / 3;
			mti.currentWound.painkiller = min(mti.currentWound.painkiller + inject, 100);
			mti.patient.GiveInventory("HDStim", (HDStim.HDSTIM_MAX - HDStim.HDSTIM_DOSE)/20);
			currentmessage.text = Stringtable.Localize("$UI_TRK_PAINKILLER_INJECTED");
			currentmessage.timeout = 2*35;
			mti.patient.A_MuzzleClimb(
				(frandom[uas_tk](-1,1),frandom[uas_tk](-1,1))/10,
				(frandom[uas_tk](-1,1),frandom[uas_tk](-1,1))/10,
				(frandom[uas_tk](-1,1),frandom[uas_tk](-1,1))/10,
				(frandom[uas_tk](-3,3),frandom[uas_tk](-3,3))/10
			);
		}
	}
}
